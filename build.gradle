plugins {
    id 'maven-publish'
    id 'fabric-loom' version '1.6-SNAPSHOT' apply false

    // https://github.com/ReplayMod/preprocessor
    // https://github.com/Fallen-Breath/preprocessor
    id 'com.replaymod.preprocess' version 'ce1aeb2b'

    // https://github.com/Fallen-Breath/yamlang
    id 'me.fallenbreath.yamlang' version '1.3.1'
}

preprocess {
    def mc116 = createNode('1.16.5', 1_16_05, 'yarn')
    def mc117 = createNode('1.17.1', 1_17_01, 'yarn')
    def mc118 = createNode('1.18.2', 1_18_02, 'yarn')
    def mc119 = createNode('1.19.4', 1_19_04, 'yarn')
    def mc12004 = createNode('1.20.4', 1_20_04, 'yarn')
    def mc12006 = createNode('1.20.6', 1_20_06, 'yarn')
    def mc121 = createNode('1.21', 1_21_00, 'yarn')

    mc116.link(mc117, null)
    mc117.link(mc118, null)
    mc118.link(mc119, null)
    mc119.link(mc12004, null)
    mc12004.link(mc12006, null)
    mc12006.link(mc121, null)
}

tasks.register('buildAndGather') {
    subprojects {
        dependsOn project.tasks.named('build').get()
    }
    doFirst {
        println 'Gathering builds'
        def buildLibs = { p -> p.buildDir.toPath().resolve('libs')
        }
        delete fileTree(buildLibs(rootProject)) {
            include '*'
        }
        subprojects {
            copy {
                from(buildLibs(project)) {
                    include '*.jar'
                    exclude '*-dev.jar', '*-sources.jar'
                }
                into buildLibs(rootProject).resolve('v' + project.mod_version)
                duplicatesStrategy DuplicatesStrategy.INCLUDE
            }
            delete(buildLibs(project))
        }
    }
}
